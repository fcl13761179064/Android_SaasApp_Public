apply plugin: 'com.android.application'
apply plugin: 'au.com.dius.pact'
apply from: "dependency.gradle"

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.ayla.hotelsaas"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode Integer.parseInt(new Date().format("yyyyMMdd"))
        versionName "1.0.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            // 设置支持的SO库架构
            // abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            abiFilters "arm64-v8a", "armeabi-v7a"  //阿里云的sdk api8以上就需要静止2个so文件
        }
        lintOptions {
            abortOnError false
        }
    }

    signingConfigs {
        config {
            v2SigningEnabled false
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    buildTypes {
        release {
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

//获取时间，用于apk命名区分打包时间
static def releaseTime() {
    return new Date().format("yyyy_MM_dd_HH_mm_ss", TimeZone.getTimeZone("UTC"))
}


ext.kotlin_version = '1.2.41'
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'cn.bingoogolapple:bga-qrcode-zbar:1.3.7'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    testImplementation 'junit:junit:4.12'
    testImplementation("au.com.dius:pact-jvm-consumer-junit:4.0.3")
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation rootProject.libraries.butterknife
    annotationProcessor rootProject.libraries.butterknife_compiler
    implementation rootProject.libraries.appcompat_v7
    implementation rootProject.libraries.design
    implementation rootProject.libraries.cardview
    implementation rootProject.libraries.rxjava
    implementation rootProject.libraries.rxandroid
    implementation rootProject.libraries.retrofit
    implementation rootProject.libraries.converter_gson
    implementation rootProject.libraries.logging_interceptor
    implementation rootProject.libraries.converter_scalars
    implementation rootProject.libraries.adapter_rxjava
    implementation rootProject.libraries.systembartint
    implementation rootProject.libraries.autosize
    implementation rootProject.libraries.SmartRefreshLayout
    implementation rootProject.libraries.SmartRefreshHeader
    implementation rootProject.libraries.BaseRyViewAdapHelper
    implementation rootProject.libraries.utilcode
    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'
    implementation 'com.xw.repo:bubbleseekbar:3.20'

    api('com.aliyun.alink.linksdk:iot-linkkit:1.7.0')
    implementation('com.aliyun.alink.linksdk:ilop-devicecenter:1.7.7.1') {
        transitive = true
    }
    api 'com.aliyun.alink.linksdk:breeze-biz:1.2.0.1'
    api 'com.aliyun.alink.linksdk:breeze:1.3.0.2'

    /* 日志.begin */
    api 'com.aliyun.iot.aep.sdk:alog:0.0.5.1'
    /* API 通道.begin */
    implementation 'com.aliyun.iot.aep.sdk:apiclient:0.0.8.2'
}

pact {
    publish {
        // 契约地址
        pactDirectory = "app/target/pacts"
        //broker url
        pactBrokerUrl = "https://abp-test.ayla.com.cn"
        pactBrokerUsername = 'admin'
        pactBrokerPassword = 'adminPassword'

        version = '1.0.0'
    }
}